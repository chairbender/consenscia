/*
See README.md "Running" for info on what tasks to use.
 */
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'mysql', name: 'mysql-connector-java', version: '5.1.40'
    }
}

plugins {
    id 'org.liquibase.gradle' version '1.2.1'
}

import groovy.sql.Sql

apply plugin: 'liquibase'


liquibase {
    activities {
        main {
            changeLogFile projectDir.absolutePath + '/liquibase/liquibaseDatabaseChangeLog.xml'
            url 'jdbc:mysql://localhost:3306/consensus'
            username 'consensusUser'
            password 'consensusUser'
        }
    }
}

/*
Runs the initialize.sql script on the database defined in gradle.properties
 */
import groovy.sql.Sql
configurations {
    driver
}
repositories {
    mavenCentral()
}
dependencies {
    driver group: 'mysql', name: 'mysql-connector-java', version: '6.0.4'
}
URLClassLoader loader = GroovyObject.class.classLoader
configurations.driver.each {File file ->
    loader.addURL(file.toURL())
}

task runInitializeScriptOnDB << {
    def props = [user: databaseUsername, password: databasePassword, allowMultiQueries: 'true'] as Properties
    def url = 'jdbc:mysql://' + databaseHostname + ':' + databasePort
    def driver = 'com.mysql.jdbc.Driver'
    def sql = Sql.newInstance(url, props, driver)

    String sqlFilePath = projectDir.absolutePath + "/scripts/initialize.sql"
    String sqlString = new File(sqlFilePath).text
    sql.execute(sqlString)
    sql.close()
}

/*
Drops and recreates the "consensus" database, then
creates all the tables using the liquibase XML.
 */
task initializeDB(dependsOn: [runInitializeScriptOnDB, update]) {

}

//makes sure the database is up to date, but does not clear it out
task updateDB(dependsOn: update) {

}

